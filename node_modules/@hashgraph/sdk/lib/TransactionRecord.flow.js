/**
 * Flowtype definitions for TransactionRecord
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.10.0
 */

import { TransactionReceipt } from "./TransactionReceipt";
import { ContractFunctionResult } from "./contract/ContractFunctionResult";
import { TransactionRecord as ProtoTransactionRecord } from "./generated/TransactionRecord_pb";
import { TransactionId } from "./TransactionId";
import { TransferList as ProtoTransferList } from "./generated/CryptoTransfer_pb";
import { Time } from "./Time";
import { Hbar } from "./Hbar";
import { Transfer } from "./Transfer";
declare var callResult: Symbol;
declare var callResultIsCreate: Symbol;
/**
 * Response when the client sends the node TransactionGetRecordResponse.
 */
declare export class TransactionRecord {
  /**
   * The status (reach consensus, or failed, or is unknown) and the ID of
   * any new account/file/instance created.
   */
  +receipt: TransactionReceipt | null;

  /**
   * The hash of the Transaction that executed (not the hash of any Transaction that failed
   * for having a duplicate TransactionID).
   */
  +transactionHash: Uint8Array;

  /**
   * The consensus timestamp (or null if didn't reach consensus yet).
   */
  +consensusTimestamp: Time;

  /**
   * The ID of the transaction this record represents.
   */
  +transactionId: TransactionId;

  /**
   * The memo that was submitted as part of the transaction (max 100 bytes).
   */
  +transactionMemo: string;

  /**
   * The actual transaction fee charged,
   * not the original transactionFee value from TransactionBody.
   */
  +transactionFee: Hbar;

  /**
   * All hbar transfers as a result of this transaction, such as fees, or transfers performed
   * by the transaction, or by a smart contract it calls, or by the creation of threshold
   * records that it triggers.
   */
  +transfers: Transfer[];
  constructor(): this;
  static _fromProto(pb: ProtoTransactionRecord): TransactionRecord;
  getContractCreateResult(): ContractFunctionResult;
  getContractExecuteResult(): ContractFunctionResult;
}
declare export function transferListToSdk(
  transferList: ProtoTransferList
): Transfer[];
declare export {};
