/**
 * Flowtype definitions for TransactionBuilder
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.10.0
 */

import {
          BaseClient
        } from './BaseClient';
import {
          TransactionBody
        } from './generated/TransactionBody_pb';
import {
          Transaction
        } from './Transaction';
import {
          Transaction as Transaction_
        } from './generated/Transaction_pb';
import {
          grpc
        } from '@improbable-eng/grpc-web';
import {
          TransactionResponse
        } from './generated/TransactionResponse_pb';
import {
          Hbar,Tinybar
        } from './Hbar';
declare var UnaryMethodDefinition: typeof grpc.UnaryMethodDefinition;import {
          AccountIdLike
        } from './account/AccountId';
import {
          TransactionId,TransactionIdLike
        } from './TransactionId';
declare export class TransactionBuilder  {
+_inner: TransactionBody;
constructor(): this;
setTransactionId(id: TransactionIdLike): this;
setTransactionValidDuration(seconds: number): this;
setMaxTransactionFee(fee: Tinybar | Hbar): this;
setNodeAccountId(nodeAccountId: AccountIdLike): this;
setTransactionMemo(memo: string): this;
setGenerateRecord(generateRecord: boolean): this;
/* NO PRINT IMPLEMENTED: GetAccessor */ any;
_doValidate(errors: string[]): void;
validate(): void;
getCost(client: BaseClient): Promise<Hbar>;
build(client?: BaseClient): Transaction;
execute(client: BaseClient): Promise<TransactionId>;
}