/**
 * Flowtype definitions for TransactionResponse_pb
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.10.0
 */

import * as jspb from "google-protobuf";
import * as ResponseCode_pb from "./ResponseCode_pb";
declare export class TransactionResponse mixins jspb.Message {
  getNodetransactionprecheckcode(): $ElementType<
    ResponseCode_pb.ResponseCodeEnumMap,
    $Keys<ResponseCode_pb.ResponseCodeEnumMap>
  >;
  setNodetransactionprecheckcode(
    value: $ElementType<
      ResponseCode_pb.ResponseCodeEnumMap,
      $Keys<ResponseCode_pb.ResponseCodeEnumMap>
    >
  ): void;
  getCost(): string;
  setCost(value: string): void;
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): TransactionResponse$AsObject;
  static toObject(
    includeInstance: boolean,
    msg: TransactionResponse
  ): TransactionResponse$AsObject;
  static extensions: {
    [key: number]: jspb.ExtensionFieldInfo<jspb.Message>,
    ...
  };
  static extensionsBinary: {
    [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>,
    ...
  };
  static serializeBinaryToWriter(
    message: TransactionResponse,
    writer: jspb.BinaryWriter
  ): void;
  static deserializeBinary(bytes: Uint8Array): TransactionResponse;
  static deserializeBinaryFromReader(
    message: TransactionResponse,
    reader: jspb.BinaryReader
  ): TransactionResponse;
}
export type TransactionResponse$AsObject = {
  nodetransactionprecheckcode: $ElementType<
    ResponseCode_pb.ResponseCodeEnumMap,
    $Keys<ResponseCode_pb.ResponseCodeEnumMap>
  >,
  cost: string,
  ...
};
