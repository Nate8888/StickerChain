/**
 * Flowtype definitions for QueryHeader_pb
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.10.0
 */

import * as jspb from "google-protobuf";
import * as Transaction_pb from "./Transaction_pb";
declare export class QueryHeader mixins jspb.Message {
  hasPayment(): boolean;
  clearPayment(): void;
  getPayment(): Transaction_pb.Transaction | void;
  setPayment(value?: Transaction_pb.Transaction): void;
  getResponsetype(): $ElementType<ResponseTypeMap, $Keys<ResponseTypeMap>>;
  setResponsetype(
    value: $ElementType<ResponseTypeMap, $Keys<ResponseTypeMap>>
  ): void;
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): QueryHeader$AsObject;
  static toObject(
    includeInstance: boolean,
    msg: QueryHeader
  ): QueryHeader$AsObject;
  static extensions: {
    [key: number]: jspb.ExtensionFieldInfo<jspb.Message>,
    ...
  };
  static extensionsBinary: {
    [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>,
    ...
  };
  static serializeBinaryToWriter(
    message: QueryHeader,
    writer: jspb.BinaryWriter
  ): void;
  static deserializeBinary(bytes: Uint8Array): QueryHeader;
  static deserializeBinaryFromReader(
    message: QueryHeader,
    reader: jspb.BinaryReader
  ): QueryHeader;
}
export type QueryHeader$AsObject = {
  payment?: Transaction_pb.Transaction.AsObject,
  responsetype: $ElementType<ResponseTypeMap, $Keys<ResponseTypeMap>>,
  ...
};
export interface ResponseTypeMap {
  ANSWER_ONLY: 0;
  ANSWER_STATE_PROOF: 1;
  COST_ANSWER: 2;
  COST_ANSWER_STATE_PROOF: 3;
}
declare export var ResponseType: ResponseTypeMap;
