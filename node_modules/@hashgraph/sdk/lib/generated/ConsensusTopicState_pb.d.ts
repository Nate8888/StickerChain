// package: proto
// file: ConsensusTopicState.proto

import * as jspb from "google-protobuf";
import * as Timestamp_pb from "./Timestamp_pb";

export class ConsensusTopicState extends jspb.Message {
  getSequencenumber(): number;
  setSequencenumber(value: number): void;

  getRunninghash(): Uint8Array | string;
  getRunninghash_asU8(): Uint8Array;
  getRunninghash_asB64(): string;
  setRunninghash(value: Uint8Array | string): void;

  hasLastsubmittime(): boolean;
  clearLastsubmittime(): void;
  getLastsubmittime(): Timestamp_pb.Timestamp | undefined;
  setLastsubmittime(value?: Timestamp_pb.Timestamp): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): ConsensusTopicState.AsObject;
  static toObject(includeInstance: boolean, msg: ConsensusTopicState): ConsensusTopicState.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: ConsensusTopicState, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): ConsensusTopicState;
  static deserializeBinaryFromReader(message: ConsensusTopicState, reader: jspb.BinaryReader): ConsensusTopicState;
}

export namespace ConsensusTopicState {
  export type AsObject = {
    sequencenumber: number,
    runninghash: Uint8Array | string,
    lastsubmittime?: Timestamp_pb.Timestamp.AsObject,
  }
}

