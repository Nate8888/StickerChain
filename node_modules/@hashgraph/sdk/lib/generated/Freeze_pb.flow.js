/**
 * Flowtype definitions for Freeze_pb
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.10.0
 */

import * as jspb from "google-protobuf";
declare export class FreezeTransactionBody mixins jspb.Message {
  getStarthour(): number;
  setStarthour(value: number): void;
  getStartmin(): number;
  setStartmin(value: number): void;
  getEndhour(): number;
  setEndhour(value: number): void;
  getEndmin(): number;
  setEndmin(value: number): void;
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): FreezeTransactionBody$AsObject;
  static toObject(
    includeInstance: boolean,
    msg: FreezeTransactionBody
  ): FreezeTransactionBody$AsObject;
  static extensions: {
    [key: number]: jspb.ExtensionFieldInfo<jspb.Message>,
    ...
  };
  static extensionsBinary: {
    [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>,
    ...
  };
  static serializeBinaryToWriter(
    message: FreezeTransactionBody,
    writer: jspb.BinaryWriter
  ): void;
  static deserializeBinary(bytes: Uint8Array): FreezeTransactionBody;
  static deserializeBinaryFromReader(
    message: FreezeTransactionBody,
    reader: jspb.BinaryReader
  ): FreezeTransactionBody;
}
export type FreezeTransactionBody$AsObject = {
  starthour: number,
  startmin: number,
  endhour: number,
  endmin: number,
  ...
};
