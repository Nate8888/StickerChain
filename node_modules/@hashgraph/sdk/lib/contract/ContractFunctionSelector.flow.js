/**
 * Flowtype definitions for ContractFunctionSelector
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.10.0
 */

declare export var ArgumentType: {|
  +uint8: 0, // 0
  +int8: 1, // 1
  +uint16: 2, // 2
  +int16: 3, // 3
  +uint32: 4, // 4
  +int32: 5, // 5
  +uint64: 6, // 6
  +int64: 7, // 7
  +uint256: 8, // 8
  +int256: 9, // 9
  +string: 10, // 10
  +bool: 11, // 11
  +bytes: 12, // 12
  +bytes32: 13, // 13
  +address: 14, // 14
  +func: 15 // 15
|};
export interface SolidityType {
  ty: $Values<typeof ArgumentType>;
  array: boolean;
}
declare export class ContractFunctionSelector {
  _paramTypes: SolidityType[];
  constructor(name?: string | null): this;
  addString(): this;
  addStringArray(): this;
  addBytes(): this;
  addBytes32(): this;
  addBytesArray(): this;
  addBytes32Array(): this;
  addInt8(): this;
  addInt32(): this;
  addInt64(): this;
  addInt256(): this;
  addInt8Array(): this;
  addInt32Array(): this;
  addInt64Array(): this;
  addInt256Array(): this;
  addUint8(): this;
  addUint32(): this;
  addUint64(): this;
  addUint256(): this;
  addUint8Array(): this;
  addUint32Array(): this;
  addUint64Array(): this;
  addUint256Array(): this;
  addBool(): this;
  addAddress(): this;
  addAddressArray(): this;
  addFunction(): this;

  /**
   * NOT A STABLE API
   */
  _build(name: string | null): Uint8Array;
  toString(): string;
}
