/**
 * Flowtype definitions for ContractRecordsQuery
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.10.0
 */

import { QueryBuilder } from "../QueryBuilder";
import { QueryHeader } from "../generated/QueryHeader_pb";
import { Query } from "../generated/Query_pb";
import { grpc } from "@improbable-eng/grpc-web";
import { Response } from "../generated/Response_pb";
import { TransactionRecord } from "../TransactionRecord";
import { ContractIdLike } from "./ContractId";
import { ResponseHeader } from "../generated/ResponseHeader_pb";

/**
 * Get all the records for a smart contract instance, for any function call
 * (or the constructor call) during the last 25 hours, for which a Record was requested.
 */
declare export class ContractRecordsQuery
  mixins QueryBuilder<TransactionRecord[]> {
  constructor(): this;

  /**
   * The smart contract instance for which the records should be retrieved.
   */
  setContractId(contractIdLike: ContractIdLike): this;
  _doLocalValidate(errors: string[]): void;
  _getMethod(): grpc.UnaryMethodDefinition<Query, Response>;
  _getHeader(): QueryHeader;
  _mapResponseHeader(response: Response): ResponseHeader;
  _mapResponse(response: Response): TransactionRecord[];
}
