/**
 * Flowtype definitions for TransactionReceipt
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.10.0
 */

import {
          TransactionReceipt as ProtoTransactionReceipt
        } from './generated/TransactionReceipt_pb';
import {
          AccountId
        } from './account/AccountId';
import {
          ConsensusTopicId
        } from './consensus/ConsensusTopicId';
import {
          ContractId
        } from './contract/ContractId';
import {
          FileId
        } from './file/FileId';
import {
          Status
        } from './Status';

/**
 * The consensus result for a transaction, which might not be currently known,
 * or may  succeed or fail.
 */
declare export class TransactionReceipt  {

/**
 * Whether the transaction succeeded or failed (or is unknown).
 */
+status: Status;
constructor(): this;

/**
 * @deprecated
 */
/* NO PRINT IMPLEMENTED: GetAccessor */ any;

/**
 * The account ID, if a new account was created.
 */
getAccountId(): AccountId;

/**
 * @deprecated
 */
/* NO PRINT IMPLEMENTED: GetAccessor */ any;

/**
 * The file ID, if a new file was created.
 */
getFileId(): FileId;

/**
 * @deprecated
 */
/* NO PRINT IMPLEMENTED: GetAccessor */ any;

/**
 * The contract ID, if a new smart contract instance was created.
 */
getContractId(): ContractId;

/**
 * TopicID of a newly created consensus service topic.
 */
getConsensusTopicId(): ConsensusTopicId;

/**
 * @deprecated `TransactionReceipt.getTopicId()` is deprecrated. Use `TransactionReceipt.getConsensusTopicId()` instead.
 */
getTopicId(): ConsensusTopicId;

/**
 * Updated running hash for a consensus service topic. The result of a ConsensusSubmitMessage.
 */
getConsensusTopicRunningHash(): Uint8Array;

/**
 * Updated sequence number for a consensus service topic. The result of a ConsensusSubmitMessage.
 */
getConsensusTopicSequenceNumber(): number;
toJSON(): {[key: string]: any};
toString(): string;
static _fromProto(receipt: ProtoTransactionReceipt): TransactionReceipt;
}