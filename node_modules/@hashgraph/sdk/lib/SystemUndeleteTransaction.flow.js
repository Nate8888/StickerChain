/**
 * Flowtype definitions for SystemUndeleteTransaction
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.10.0
 */

import {
          TransactionBuilder
        } from './TransactionBuilder';
import {
          FileIdLike
        } from './file/FileId';
import {
          ContractIdLike
        } from './contract/ContractId';
import {
          grpc
        } from '@improbable-eng/grpc-web';
import {
          Transaction
        } from './generated/Transaction_pb';
import {
          TransactionResponse
        } from './generated/TransactionResponse_pb';
import {
          ConsensusTopicIdLike
        } from './consensus/ConsensusTopicId';

/**
 * Undelete a file or smart contract that was deleted by AdminDelete - can only be done with a
 * Hedera admin multisig. When it is deleted, it immediately disappears from the system as seen
 * by the user, but is still stored internally until the expiration time, at which time it is
 * truly and permanently deleted. Until that time, it can be undeleted by the Hedera admin
 * multisig. When a smart contract is deleted, the cryptocurrency account within it continues to
 * exist, and is not affected by the expiration time here.
 */
declare export class SystemUndeleteTransaction mixins TransactionBuilder {
constructor(): this;
setId(id: FileIdLike | ContractIdLike): this;

/**
 * The file ID to undelete, in the format used in transactions.
 */
setFileId(id: FileIdLike): this;

/**
 * The contract ID instance to undelete, in the format used in transactions
 */
setContractId(id: ContractIdLike): this;

/**
 * The topic ID instance to undelete, in the format used in transactions
 */
setTopicId(id: ConsensusTopicIdLike): this;
_doValidate(errors: string[]): void;
/* NO PRINT IMPLEMENTED: GetAccessor */ any;
}