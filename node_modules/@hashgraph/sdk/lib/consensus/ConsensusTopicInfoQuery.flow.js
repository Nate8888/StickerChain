/**
 * Flowtype definitions for ConsensusTopicInfoQuery
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.10.0
 */

import { QueryBuilder } from "../QueryBuilder";
import { grpc } from "@improbable-eng/grpc-web";
import { Query } from "../generated/Query_pb";
import { QueryHeader } from "../generated/QueryHeader_pb";
import { Response } from "../generated/Response_pb";
import { ResponseHeader } from "../generated/ResponseHeader_pb";
import { Time } from "../Time";
import { PublicKey } from "../crypto/PublicKey";
import { AccountId } from "../account/AccountId";
import { ConsensusTopicIdLike } from "./ConsensusTopicId";
export interface ConsensusTopicInfo {
  topicMemo: string;
  runningHash: Uint8Array;
  sequenceNumber: number;
  expirationTime: Time;
  adminKey: PublicKey | null;
  submitKey: PublicKey | null;
  autoRenewPeriod: number;
  autoRenewAccount: AccountId | null;
}
declare export class ConsensusTopicInfoQuery
  mixins QueryBuilder<ConsensusTopicInfo> {
  constructor(): this;
  setTopicId(id: ConsensusTopicIdLike): this;
  _doLocalValidate(errors: string[]): void;
  _getMethod(): grpc.UnaryMethodDefinition<Query, Response>;
  _getHeader(): QueryHeader;
  _mapResponseHeader(response: Response): ResponseHeader;
  _mapResponse(response: Response): ConsensusTopicInfo;
}
