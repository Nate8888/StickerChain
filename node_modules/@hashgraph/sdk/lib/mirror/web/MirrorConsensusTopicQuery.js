"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const MirrorConsensusService_pb_service_1 = require("../../generated/MirrorConsensusService_pb_service");
const grpc_web_1 = require("@improbable-eng/grpc-web");
const MirrorSubscriptionHandle_1 = require("../MirrorSubscriptionHandle");
const MirrorConsensusTopicResponse_1 = require("../MirrorConsensusTopicResponse");
const BaseMirrorConsensusTopicQuery_1 = require("../BaseMirrorConsensusTopicQuery");
class MirrorConsensusTopicQuery extends BaseMirrorConsensusTopicQuery_1.BaseMirrorConsensusTopicQuery {
    subscribe(client, listener, errorHandler) {
        this._validate();
        const response = grpc_web_1.grpc.invoke(MirrorConsensusService_pb_service_1.ConsensusService.subscribeTopic, {
            host: client.endpoint,
            request: this._builder,
            onMessage(message) {
                listener(new MirrorConsensusTopicResponse_1.MirrorConsensusTopicResponse(message));
            },
            onEnd(code, message) {
                if (errorHandler != null) {
                    errorHandler(new Error(`Received status code: ${code} and message: ${message}`));
                }
            }
        });
        return new MirrorSubscriptionHandle_1.MirrorSubscriptionHandle(response.close);
    }
}
exports.MirrorConsensusTopicQuery = MirrorConsensusTopicQuery;
